/**
 * This class is generated by jOOQ
 */
package myicellar.jooq.tables;


import java.util.Arrays;
import java.util.List;

import myicellar.jooq.Keys;
import myicellar.jooq.MicCore;
import myicellar.jooq.records.WineNameJQR;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblWineName extends TableImpl<WineNameJQR> {

	private static final long serialVersionUID = 387070690;

	/**
	 * The reference instance of <code>mic_core.wine_name</code>
	 */
	public static final TblWineName WINE_NAME = new TblWineName();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<WineNameJQR> getRecordType() {
		return WineNameJQR.class;
	}

	/**
	 * The column <code>mic_core.wine_name.wine_name_id</code>.
	 */
	public final TableField<WineNameJQR, Long> WINE_NAME_ID = createField("wine_name_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mic_core.wine_name.wine_id</code>.
	 */
	public final TableField<WineNameJQR, Long> WINE_ID = createField("wine_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>mic_core.wine_name.wine_name_usr</code>.
	 */
	public final TableField<WineNameJQR, String> WINE_NAME_USR = createField("wine_name_usr", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>mic_core.wine_name.wine_name_eng</code>.
	 */
	public final TableField<WineNameJQR, String> WINE_NAME_ENG = createField("wine_name_eng", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>mic_core.wine_name.wine_name_chs</code>.
	 */
	public final TableField<WineNameJQR, String> WINE_NAME_CHS = createField("wine_name_chs", org.jooq.impl.SQLDataType.VARCHAR.length(31), this, "");

	/**
	 * The column <code>mic_core.wine_name.wine_name_cht</code>.
	 */
	public final TableField<WineNameJQR, String> WINE_NAME_CHT = createField("wine_name_cht", org.jooq.impl.SQLDataType.VARCHAR.length(31), this, "");

	/**
	 * The column <code>mic_core.wine_name.is_valid</code>.
	 */
	public final TableField<WineNameJQR, Boolean> IS_VALID = createField("is_valid", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>mic_core.wine_name.last_upd_mictime</code>.
	 */
	public final TableField<WineNameJQR, Integer> LAST_UPD_MICTIME = createField("last_upd_mictime", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>mic_core.wine_name</code> table reference
	 */
	public TblWineName() {
		this("wine_name", null);
	}

	/**
	 * Create an aliased <code>mic_core.wine_name</code> table reference
	 */
	public TblWineName(String alias) {
		this(alias, WINE_NAME);
	}

	private TblWineName(String alias, Table<WineNameJQR> aliased) {
		this(alias, aliased, null);
	}

	private TblWineName(String alias, Table<WineNameJQR> aliased, Field<?>[] parameters) {
		super(alias, MicCore.MIC_CORE, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<WineNameJQR, Long> getIdentity() {
		return Keys.IDENTITY_WINE_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<WineNameJQR> getPrimaryKey() {
		return Keys.WINE_NAME_PKEY1;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<WineNameJQR>> getKeys() {
		return Arrays.<UniqueKey<WineNameJQR>>asList(Keys.WINE_NAME_PKEY1, Keys.WINE_NAME_WINE_ID_WINE_NAME_ID_KEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TblWineName as(String alias) {
		return new TblWineName(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TblWineName rename(String name) {
		return new TblWineName(name, null);
	}
}
