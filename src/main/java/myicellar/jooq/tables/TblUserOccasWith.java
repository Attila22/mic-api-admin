/**
 * This class is generated by jOOQ
 */
package myicellar.jooq.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import myicellar.jooq.Keys;
import myicellar.jooq.MicCore;
import myicellar.jooq.records.UserOccasWithJQR;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblUserOccasWith extends TableImpl<UserOccasWithJQR> {

	private static final long serialVersionUID = -1339472836;

	/**
	 * The reference instance of <code>mic_core.user_occas_with</code>
	 */
	public static final TblUserOccasWith USER_OCCAS_WITH = new TblUserOccasWith();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UserOccasWithJQR> getRecordType() {
		return UserOccasWithJQR.class;
	}

	/**
	 * The column <code>mic_core.user_occas_with.occas_id</code>.
	 */
	public final TableField<UserOccasWithJQR, Long> OCCAS_ID = createField("occas_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>mic_core.user_occas_with.user_id</code>.
	 */
	public final TableField<UserOccasWithJQR, UUID> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * Create a <code>mic_core.user_occas_with</code> table reference
	 */
	public TblUserOccasWith() {
		this("user_occas_with", null);
	}

	/**
	 * Create an aliased <code>mic_core.user_occas_with</code> table reference
	 */
	public TblUserOccasWith(String alias) {
		this(alias, USER_OCCAS_WITH);
	}

	private TblUserOccasWith(String alias, Table<UserOccasWithJQR> aliased) {
		this(alias, aliased, null);
	}

	private TblUserOccasWith(String alias, Table<UserOccasWithJQR> aliased, Field<?>[] parameters) {
		super(alias, MicCore.MIC_CORE, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UserOccasWithJQR> getPrimaryKey() {
		return Keys.USER_OCCAS_WITH_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UserOccasWithJQR>> getKeys() {
		return Arrays.<UniqueKey<UserOccasWithJQR>>asList(Keys.USER_OCCAS_WITH_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TblUserOccasWith as(String alias) {
		return new TblUserOccasWith(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TblUserOccasWith rename(String name) {
		return new TblUserOccasWith(name, null);
	}
}
