/**
 * This class is generated by jOOQ
 */
package myicellar.jooq.tables;


import java.sql.Timestamp;
import java.util.UUID;

import myicellar.jooq.MicCore;
import myicellar.jooq.records.UauthPwdresetJQR;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblUauthPwdreset extends TableImpl<UauthPwdresetJQR> {

	private static final long serialVersionUID = -1817691147;

	/**
	 * The reference instance of <code>mic_core.uauth_pwdreset</code>
	 */
	public static final TblUauthPwdreset UAUTH_PWDRESET = new TblUauthPwdreset();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UauthPwdresetJQR> getRecordType() {
		return UauthPwdresetJQR.class;
	}

	/**
	 * The column <code>mic_core.uauth_pwdreset.user_id</code>.
	 */
	public final TableField<UauthPwdresetJQR, UUID> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>mic_core.uauth_pwdreset.pwdreset_token</code>.
	 */
	public final TableField<UauthPwdresetJQR, String> PWDRESET_TOKEN = createField("pwdreset_token", org.jooq.impl.SQLDataType.VARCHAR.length(16).nullable(false), this, "");

	/**
	 * The column <code>mic_core.uauth_pwdreset.expiry_date</code>.
	 */
	public final TableField<UauthPwdresetJQR, Timestamp> EXPIRY_DATE = createField("expiry_date", org.jooq.impl.SQLDataType.TIMESTAMP.defaulted(true), this, "");

	/**
	 * Create a <code>mic_core.uauth_pwdreset</code> table reference
	 */
	public TblUauthPwdreset() {
		this("uauth_pwdreset", null);
	}

	/**
	 * Create an aliased <code>mic_core.uauth_pwdreset</code> table reference
	 */
	public TblUauthPwdreset(String alias) {
		this(alias, UAUTH_PWDRESET);
	}

	private TblUauthPwdreset(String alias, Table<UauthPwdresetJQR> aliased) {
		this(alias, aliased, null);
	}

	private TblUauthPwdreset(String alias, Table<UauthPwdresetJQR> aliased, Field<?>[] parameters) {
		super(alias, MicCore.MIC_CORE, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TblUauthPwdreset as(String alias) {
		return new TblUauthPwdreset(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TblUauthPwdreset rename(String name) {
		return new TblUauthPwdreset(name, null);
	}
}
