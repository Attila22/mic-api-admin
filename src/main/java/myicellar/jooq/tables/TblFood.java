/**
 * This class is generated by jOOQ
 */
package myicellar.jooq.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import myicellar.jooq.Keys;
import myicellar.jooq.MicCore;
import myicellar.jooq.records.FoodJQR;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblFood extends TableImpl<FoodJQR> {

	private static final long serialVersionUID = 1635807286;

	/**
	 * The reference instance of <code>mic_core.food</code>
	 */
	public static final TblFood FOOD = new TblFood();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FoodJQR> getRecordType() {
		return FoodJQR.class;
	}

	/**
	 * The column <code>mic_core.food.food_id</code>.
	 */
	public final TableField<FoodJQR, Long> FOOD_ID = createField("food_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mic_core.food.food_name</code>.
	 */
	public final TableField<FoodJQR, String> FOOD_NAME = createField("food_name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>mic_core.food.food_name_hash</code>.
	 */
	public final TableField<FoodJQR, UUID> FOOD_NAME_HASH = createField("food_name_hash", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>mic_core.food.is_archived</code>.
	 */
	public final TableField<FoodJQR, Boolean> IS_ARCHIVED = createField("is_archived", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mic_core.food.last_upd_mictime</code>.
	 */
	public final TableField<FoodJQR, Integer> LAST_UPD_MICTIME = createField("last_upd_mictime", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>mic_core.food</code> table reference
	 */
	public TblFood() {
		this("food", null);
	}

	/**
	 * Create an aliased <code>mic_core.food</code> table reference
	 */
	public TblFood(String alias) {
		this(alias, FOOD);
	}

	private TblFood(String alias, Table<FoodJQR> aliased) {
		this(alias, aliased, null);
	}

	private TblFood(String alias, Table<FoodJQR> aliased, Field<?>[] parameters) {
		super(alias, MicCore.MIC_CORE, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<FoodJQR, Long> getIdentity() {
		return Keys.IDENTITY_FOOD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<FoodJQR> getPrimaryKey() {
		return Keys.FOOD_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<FoodJQR>> getKeys() {
		return Arrays.<UniqueKey<FoodJQR>>asList(Keys.FOOD_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TblFood as(String alias) {
		return new TblFood(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TblFood rename(String name) {
		return new TblFood(name, null);
	}
}
