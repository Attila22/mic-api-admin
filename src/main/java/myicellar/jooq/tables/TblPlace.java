/**
 * This class is generated by jOOQ
 */
package myicellar.jooq.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import myicellar.jooq.Keys;
import myicellar.jooq.MicCore;
import myicellar.jooq.records.PlaceJQR;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblPlace extends TableImpl<PlaceJQR> {

	private static final long serialVersionUID = 1932672363;

	/**
	 * The reference instance of <code>mic_core.place</code>
	 */
	public static final TblPlace PLACE = new TblPlace();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PlaceJQR> getRecordType() {
		return PlaceJQR.class;
	}

	/**
	 * The column <code>mic_core.place.place_id</code>.
	 */
	public final TableField<PlaceJQR, Long> PLACE_ID = createField("place_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mic_core.place.place_name</code>.
	 */
	public final TableField<PlaceJQR, String> PLACE_NAME = createField("place_name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>mic_core.place.place_name_hash</code>.
	 */
	public final TableField<PlaceJQR, UUID> PLACE_NAME_HASH = createField("place_name_hash", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>mic_core.place.is_archived</code>.
	 */
	public final TableField<PlaceJQR, Boolean> IS_ARCHIVED = createField("is_archived", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mic_core.place.last_upd_mictime</code>.
	 */
	public final TableField<PlaceJQR, Integer> LAST_UPD_MICTIME = createField("last_upd_mictime", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>mic_core.place</code> table reference
	 */
	public TblPlace() {
		this("place", null);
	}

	/**
	 * Create an aliased <code>mic_core.place</code> table reference
	 */
	public TblPlace(String alias) {
		this(alias, PLACE);
	}

	private TblPlace(String alias, Table<PlaceJQR> aliased) {
		this(alias, aliased, null);
	}

	private TblPlace(String alias, Table<PlaceJQR> aliased, Field<?>[] parameters) {
		super(alias, MicCore.MIC_CORE, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<PlaceJQR, Long> getIdentity() {
		return Keys.IDENTITY_PLACE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PlaceJQR> getPrimaryKey() {
		return Keys.PLACE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PlaceJQR>> getKeys() {
		return Arrays.<UniqueKey<PlaceJQR>>asList(Keys.PLACE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TblPlace as(String alias) {
		return new TblPlace(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TblPlace rename(String name) {
		return new TblPlace(name, null);
	}
}
