/**
 * This class is generated by jOOQ
 */
package myicellar.jooq.tables;


import java.util.Arrays;
import java.util.List;

import myicellar.jooq.Keys;
import myicellar.jooq.MicCore;
import myicellar.jooq.records.AttrAbnoteJQR;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblAttrAbnote extends TableImpl<AttrAbnoteJQR> {

	private static final long serialVersionUID = -1979001677;

	/**
	 * The reference instance of <code>mic_core.attr_abnote</code>
	 */
	public static final TblAttrAbnote ATTR_ABNOTE = new TblAttrAbnote();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AttrAbnoteJQR> getRecordType() {
		return AttrAbnoteJQR.class;
	}

	/**
	 * The column <code>mic_core.attr_abnote.attr_id</code>.
	 */
	public final TableField<AttrAbnoteJQR, Long> ATTR_ID = createField("attr_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mic_core.attr_abnote.attr_name_id</code>.
	 */
	public final TableField<AttrAbnoteJQR, Short> ATTR_NAME_ID = createField("attr_name_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

	/**
	 * The column <code>mic_core.attr_abnote.attr_val_usr</code>.
	 */
	public final TableField<AttrAbnoteJQR, String> ATTR_VAL_USR = createField("attr_val_usr", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>mic_core.attr_abnote.attr_val_eng</code>.
	 */
	public final TableField<AttrAbnoteJQR, String> ATTR_VAL_ENG = createField("attr_val_eng", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>mic_core.attr_abnote.attr_val_chs</code>.
	 */
	public final TableField<AttrAbnoteJQR, String> ATTR_VAL_CHS = createField("attr_val_chs", org.jooq.impl.SQLDataType.VARCHAR.length(31), this, "");

	/**
	 * The column <code>mic_core.attr_abnote.attr_val_cht</code>.
	 */
	public final TableField<AttrAbnoteJQR, String> ATTR_VAL_CHT = createField("attr_val_cht", org.jooq.impl.SQLDataType.VARCHAR.length(31), this, "");

	/**
	 * The column <code>mic_core.attr_abnote.is_valid</code>.
	 */
	public final TableField<AttrAbnoteJQR, Boolean> IS_VALID = createField("is_valid", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>mic_core.attr_abnote.last_upd_mictime</code>.
	 */
	public final TableField<AttrAbnoteJQR, Integer> LAST_UPD_MICTIME = createField("last_upd_mictime", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>mic_core.attr_abnote</code> table reference
	 */
	public TblAttrAbnote() {
		this("attr_abnote", null);
	}

	/**
	 * Create an aliased <code>mic_core.attr_abnote</code> table reference
	 */
	public TblAttrAbnote(String alias) {
		this(alias, ATTR_ABNOTE);
	}

	private TblAttrAbnote(String alias, Table<AttrAbnoteJQR> aliased) {
		this(alias, aliased, null);
	}

	private TblAttrAbnote(String alias, Table<AttrAbnoteJQR> aliased, Field<?>[] parameters) {
		super(alias, MicCore.MIC_CORE, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<AttrAbnoteJQR, Long> getIdentity() {
		return Keys.IDENTITY_ATTR_ABNOTE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AttrAbnoteJQR> getPrimaryKey() {
		return Keys.ATTR_ABNOTE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AttrAbnoteJQR>> getKeys() {
		return Arrays.<UniqueKey<AttrAbnoteJQR>>asList(Keys.ATTR_ABNOTE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TblAttrAbnote as(String alias) {
		return new TblAttrAbnote(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TblAttrAbnote rename(String name) {
		return new TblAttrAbnote(name, null);
	}
}
