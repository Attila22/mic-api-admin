/**
 * This class is generated by jOOQ
 */
package myicellar.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import myicellar.jooq.Keys;
import myicellar.jooq.MicCore;
import myicellar.jooq.records.UauthSessionJQR;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblUauthSession extends TableImpl<UauthSessionJQR> {

	private static final long serialVersionUID = -1380729408;

	/**
	 * The reference instance of <code>mic_core.uauth_session</code>
	 */
	public static final TblUauthSession UAUTH_SESSION = new TblUauthSession();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UauthSessionJQR> getRecordType() {
		return UauthSessionJQR.class;
	}

	/**
	 * The column <code>mic_core.uauth_session.user_id</code>.
	 */
	public final TableField<UauthSessionJQR, UUID> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>mic_core.uauth_session.secure_token</code>.
	 */
	public final TableField<UauthSessionJQR, String> SECURE_TOKEN = createField("secure_token", org.jooq.impl.SQLDataType.VARCHAR.length(63).nullable(false), this, "");

	/**
	 * The column <code>mic_core.uauth_session.is_activated</code>.
	 */
	public final TableField<UauthSessionJQR, Boolean> IS_ACTIVATED = createField("is_activated", org.jooq.impl.SQLDataType.BOOLEAN.defaulted(true), this, "");

	/**
	 * The column <code>mic_core.uauth_session.expiry_date</code>.
	 */
	public final TableField<UauthSessionJQR, Timestamp> EXPIRY_DATE = createField("expiry_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * Create a <code>mic_core.uauth_session</code> table reference
	 */
	public TblUauthSession() {
		this("uauth_session", null);
	}

	/**
	 * Create an aliased <code>mic_core.uauth_session</code> table reference
	 */
	public TblUauthSession(String alias) {
		this(alias, UAUTH_SESSION);
	}

	private TblUauthSession(String alias, Table<UauthSessionJQR> aliased) {
		this(alias, aliased, null);
	}

	private TblUauthSession(String alias, Table<UauthSessionJQR> aliased, Field<?>[] parameters) {
		super(alias, MicCore.MIC_CORE, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UauthSessionJQR> getPrimaryKey() {
		return Keys.UAUTH_SESSION_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UauthSessionJQR>> getKeys() {
		return Arrays.<UniqueKey<UauthSessionJQR>>asList(Keys.UAUTH_SESSION_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TblUauthSession as(String alias) {
		return new TblUauthSession(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TblUauthSession rename(String name) {
		return new TblUauthSession(name, null);
	}
}
