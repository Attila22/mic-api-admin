/**
 * This class is generated by jOOQ
 */
package myicellar.jooq.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import myicellar.jooq.Keys;
import myicellar.jooq.MicCore;
import myicellar.jooq.records.UserDlvrProfJQR;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblUserDlvrProf extends TableImpl<UserDlvrProfJQR> {

	private static final long serialVersionUID = -1129279406;

	/**
	 * The reference instance of <code>mic_core.user_dlvr_prof</code>
	 */
	public static final TblUserDlvrProf USER_DLVR_PROF = new TblUserDlvrProf();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UserDlvrProfJQR> getRecordType() {
		return UserDlvrProfJQR.class;
	}

	/**
	 * The column <code>mic_core.user_dlvr_prof.dlvr_id</code>.
	 */
	public final TableField<UserDlvrProfJQR, Long> DLVR_ID = createField("dlvr_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mic_core.user_dlvr_prof.user_id</code>.
	 */
	public final TableField<UserDlvrProfJQR, UUID> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>mic_core.user_dlvr_prof.is_default</code>.
	 */
	public final TableField<UserDlvrProfJQR, String> IS_DEFAULT = createField("is_default", org.jooq.impl.SQLDataType.CHAR.length(1).nullable(false), this, "");

	/**
	 * The column <code>mic_core.user_dlvr_prof.firstname</code>.
	 */
	public final TableField<UserDlvrProfJQR, String> FIRSTNAME = createField("firstname", org.jooq.impl.SQLDataType.VARCHAR.length(127), this, "");

	/**
	 * The column <code>mic_core.user_dlvr_prof.lastname</code>.
	 */
	public final TableField<UserDlvrProfJQR, String> LASTNAME = createField("lastname", org.jooq.impl.SQLDataType.VARCHAR.length(127), this, "");

	/**
	 * The column <code>mic_core.user_dlvr_prof.address</code>.
	 */
	public final TableField<UserDlvrProfJQR, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>mic_core.user_dlvr_prof.country</code>.
	 */
	public final TableField<UserDlvrProfJQR, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>mic_core.user_dlvr_prof.contact_tel</code>.
	 */
	public final TableField<UserDlvrProfJQR, String> CONTACT_TEL = createField("contact_tel", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>mic_core.user_dlvr_prof.last_upd_mictime</code>.
	 */
	public final TableField<UserDlvrProfJQR, Integer> LAST_UPD_MICTIME = createField("last_upd_mictime", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>mic_core.user_dlvr_prof</code> table reference
	 */
	public TblUserDlvrProf() {
		this("user_dlvr_prof", null);
	}

	/**
	 * Create an aliased <code>mic_core.user_dlvr_prof</code> table reference
	 */
	public TblUserDlvrProf(String alias) {
		this(alias, USER_DLVR_PROF);
	}

	private TblUserDlvrProf(String alias, Table<UserDlvrProfJQR> aliased) {
		this(alias, aliased, null);
	}

	private TblUserDlvrProf(String alias, Table<UserDlvrProfJQR> aliased, Field<?>[] parameters) {
		super(alias, MicCore.MIC_CORE, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<UserDlvrProfJQR, Long> getIdentity() {
		return Keys.IDENTITY_USER_DLVR_PROF;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UserDlvrProfJQR> getPrimaryKey() {
		return Keys.USER_DLVR_PROF_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UserDlvrProfJQR>> getKeys() {
		return Arrays.<UniqueKey<UserDlvrProfJQR>>asList(Keys.USER_DLVR_PROF_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TblUserDlvrProf as(String alias) {
		return new TblUserDlvrProf(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TblUserDlvrProf rename(String name) {
		return new TblUserDlvrProf(name, null);
	}
}
