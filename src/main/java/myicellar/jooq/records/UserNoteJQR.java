/**
 * This class is generated by jOOQ
 */
package myicellar.jooq.records;


import java.sql.Date;
import java.util.UUID;

import myicellar.jooq.tables.TblUserNote;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserNoteJQR extends UpdatableRecordImpl<UserNoteJQR> implements Record11<Long, UUID, Long, Date, Long, Short, Short, String, Boolean, UUID, Integer> {

	private static final long serialVersionUID = 1111269703;

	/**
	 * Setter for <code>mic_core.user_note.note_id</code>.
	 */
	public void setNoteId(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>mic_core.user_note.note_id</code>.
	 */
	public Long getNoteId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>mic_core.user_note.user_id</code>.
	 */
	public void setUserId(UUID value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>mic_core.user_note.user_id</code>.
	 */
	public UUID getUserId() {
		return (UUID) getValue(1);
	}

	/**
	 * Setter for <code>mic_core.user_note.occas_id</code>.
	 */
	public void setOccasId(Long value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>mic_core.user_note.occas_id</code>.
	 */
	public Long getOccasId() {
		return (Long) getValue(2);
	}

	/**
	 * Setter for <code>mic_core.user_note.note_date</code>.
	 */
	public void setNoteDate(Date value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>mic_core.user_note.note_date</code>.
	 */
	public Date getNoteDate() {
		return (Date) getValue(3);
	}

	/**
	 * Setter for <code>mic_core.user_note.wine_id</code>.
	 */
	public void setWineId(Long value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>mic_core.user_note.wine_id</code>.
	 */
	public Long getWineId() {
		return (Long) getValue(4);
	}

	/**
	 * Setter for <code>mic_core.user_note.vintage_tag</code>.
	 */
	public void setVintageTag(Short value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>mic_core.user_note.vintage_tag</code>.
	 */
	public Short getVintageTag() {
		return (Short) getValue(5);
	}

	/**
	 * Setter for <code>mic_core.user_note.rate</code>.
	 */
	public void setRate(Short value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>mic_core.user_note.rate</code>.
	 */
	public Short getRate() {
		return (Short) getValue(6);
	}

	/**
	 * Setter for <code>mic_core.user_note.note</code>.
	 */
	public void setNote(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>mic_core.user_note.note</code>.
	 */
	public String getNote() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>mic_core.user_note.is_archived</code>.
	 */
	public void setIsArchived(Boolean value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>mic_core.user_note.is_archived</code>.
	 */
	public Boolean getIsArchived() {
		return (Boolean) getValue(8);
	}

	/**
	 * Setter for <code>mic_core.user_note.note_img</code>.
	 */
	public void setNoteImg(UUID value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>mic_core.user_note.note_img</code>.
	 */
	public UUID getNoteImg() {
		return (UUID) getValue(9);
	}

	/**
	 * Setter for <code>mic_core.user_note.last_upd_mictime</code>.
	 */
	public void setLastUpdMictime(Integer value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>mic_core.user_note.last_upd_mictime</code>.
	 */
	public Integer getLastUpdMictime() {
		return (Integer) getValue(10);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record11 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row11<Long, UUID, Long, Date, Long, Short, Short, String, Boolean, UUID, Integer> fieldsRow() {
		return (Row11) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row11<Long, UUID, Long, Date, Long, Short, Short, String, Boolean, UUID, Integer> valuesRow() {
		return (Row11) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return TblUserNote.USER_NOTE.NOTE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field2() {
		return TblUserNote.USER_NOTE.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field3() {
		return TblUserNote.USER_NOTE.OCCAS_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field4() {
		return TblUserNote.USER_NOTE.NOTE_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field5() {
		return TblUserNote.USER_NOTE.WINE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field6() {
		return TblUserNote.USER_NOTE.VINTAGE_TAG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field7() {
		return TblUserNote.USER_NOTE.RATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return TblUserNote.USER_NOTE.NOTE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field9() {
		return TblUserNote.USER_NOTE.IS_ARCHIVED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field10() {
		return TblUserNote.USER_NOTE.NOTE_IMG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field11() {
		return TblUserNote.USER_NOTE.LAST_UPD_MICTIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getNoteId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value2() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value3() {
		return getOccasId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value4() {
		return getNoteDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value5() {
		return getWineId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value6() {
		return getVintageTag();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value7() {
		return getRate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getNote();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value9() {
		return getIsArchived();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value10() {
		return getNoteImg();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value11() {
		return getLastUpdMictime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserNoteJQR value1(Long value) {
		setNoteId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserNoteJQR value2(UUID value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserNoteJQR value3(Long value) {
		setOccasId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserNoteJQR value4(Date value) {
		setNoteDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserNoteJQR value5(Long value) {
		setWineId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserNoteJQR value6(Short value) {
		setVintageTag(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserNoteJQR value7(Short value) {
		setRate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserNoteJQR value8(String value) {
		setNote(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserNoteJQR value9(Boolean value) {
		setIsArchived(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserNoteJQR value10(UUID value) {
		setNoteImg(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserNoteJQR value11(Integer value) {
		setLastUpdMictime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserNoteJQR values(Long value1, UUID value2, Long value3, Date value4, Long value5, Short value6, Short value7, String value8, Boolean value9, UUID value10, Integer value11) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UserNoteJQR
	 */
	public UserNoteJQR() {
		super(TblUserNote.USER_NOTE);
	}

	/**
	 * Create a detached, initialised UserNoteJQR
	 */
	public UserNoteJQR(Long noteId, UUID userId, Long occasId, Date noteDate, Long wineId, Short vintageTag, Short rate, String note, Boolean isArchived, UUID noteImg, Integer lastUpdMictime) {
		super(TblUserNote.USER_NOTE);

		setValue(0, noteId);
		setValue(1, userId);
		setValue(2, occasId);
		setValue(3, noteDate);
		setValue(4, wineId);
		setValue(5, vintageTag);
		setValue(6, rate);
		setValue(7, note);
		setValue(8, isArchived);
		setValue(9, noteImg);
		setValue(10, lastUpdMictime);
	}
}
